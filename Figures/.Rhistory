filter(agg_level_desc %in% agg_level) %>%
filter(reference_period_desc %in% ref_period) %>%
filter(asd_desc %in% district) %>%
# trim white space from ends (note: 'Value' is a character here, not a number)
mutate(value_trim = str_trim(Value)) %>%
# select only the columns we'll need
select(asd_desc,
agg_level_desc, year, short_desc, class_desc, domain_desc, value_char =value_trim, unit_desc, commodity_desc) %>%
# filter out entries with codes '(D)' and '(Z)'
filter(value_char != "(D)" & value_char != "(Z)") %>%
# remove commas from number values and convert to R numeric class
mutate(value = as.numeric(str_remove(value_char, ","))) %>%
# remove unnecessary columns
select(-value_char)%>%
separate(short_desc, c("crop", 'info'), "- ")
}
ID<-sales(id_ops_raw_data)
US<-sales(us_ops_raw_data)
#It would be ideal if there was an automated sorting and processing of this data to get at values, also -- we used CDL areas to get at the value for 2010 (e.g. crops that aren't going to be quantified bc of an individual farmer)
write.csv(ID, file='IdahoSales_2015.csv')
write.csv(US, file='NationalSales_2015.csv')
library(dataRetrieval)
library(tidyverse)
pCode <- "00060"
Frozen<-"15896000" # Kuparuk R, Deadhorse, AK; alt SF Grand River near Cash, SD  06356500
FrozStart<- as.Date("2018-10-01") #"2017-09-01"
FrozEnd <- as.Date("2109-06-01") #"2018-07-01
FrozenQ <- readNWISuv(siteNumbers = Frozen, parameterCd = pCode, startDate = FrozStart, endDate = FrozEnd) %>% renameNWISColumns() %>% data.frame
View(FrozenQ)
#----- Frozen gauge location -------------------------
Frozen<-"15896000" # Kuparuk R, Deadhorse, AK; alt SF Grand River near Cash, SD  06356500
FrozStart<- as.Date("2018-10-01") #"2017-09-01"
FrozEnd <- as.Date("2109-06-01") #"2018-07-01
FrozenQ <- readNWISuv(siteNumbers = Frozen, parameterCd = pCode, startDate = FrozStart, endDate = FrozEnd) %>% renameNWISColumns() %>% data.frame
#----- Flow Reversal ---------------------------------
FlowReverse<- "04087170" #Milwaukee
ReverseStart<-as.Date("2018-12-15")
ReverseEnd<-as.Date("2019-04-01")
FlowReverseQ <- readNWISuv(siteNumbers = FlowReverse, parameterCd = pCode, startDate = ReverseStart, endDate = ReverseEnd) %>% renameNWISColumns() %>% data.frame
#----- Data/equipment error ---------------------------
DataError<- "" #bypass through karst Palanisamy and Workman 2015 - need data or gage number
DataErrorStart<-as.Date("")
DataErrorEnd<-as.Date("")
#-----Naturally occuring isolated pools --------------
IsolatedPool<- "09512500" #Agua Fria River nr Mayer, AZ
IsoStart<-as.Date("2019-06-01")
IsoEnd<-as.Date("2019-08-01")
IsoQ <- readNWISuv(siteNumbers = FlowReverse, parameterCd = pCode, startDate = IsoStart, endDate = IsoEnd) %>% renameNWISColumns() %>% data.frame
# ----- Karst Bypass around gauge ------------
Bypass<- "" #bypass through karst Palanisamy and Workman 2015 - need data or gage number
BypassStart<-as.Date("")
BypassEnd<-as.Date("")
#can probably remove this one
UpstreamLoss<- "06879650" #kings Creek nr Manhattan, KS
UpStart<-as.Date("") #"2018-12-01 - when you zoom in it's actually at 1 cfs - better time-frame?
UpEnd<-as.Date("") #"2018-07-01
#----- Groundwater Pumping Removes flow -------
AnthroGW<- "07139500"  # Arkansas River near Dodge City - need the correct USGS gauge number
AgwStart<-as.Date("2000-10-01") #2000-10-01 ??
AgwEnd<-as.Date("2001-10-01") #2001-10-01
AnthroGWQ <- readNWISuv(siteNumbers = AnthroGW, parameterCd = pCode, startDate = AgwStart, endDate = AgwEnd) %>% renameNWISColumns() %>% data.frame
#-----Conveyance around gauge -----------------
AnthroConveyanceA<- "08358400" #Rio Grande Floodway
AnthroConveyanceB<- "08358300" #Rio Grande Conveyance
AConvStart<-as.Date("2005-08-01")
AConvEnd<-as.Date("2005-11-01")
AnthroConveyanceAQ <- readNWISuv(siteNumbers = AnthroConveyanceA, parameterCd = pCode, startDate = AConvStart, endDate = AConvEnd) %>% renameNWISColumns() %>% data.frame
AnthroConveyanceBQ <- readNWISuv(siteNumbers = AnthroConveyanceB, parameterCd = pCode, startDate = AConvStart, endDate = AConvEnd) %>% renameNWISColumns() %>% data.frame
sites<-c('Frozen', 'FlowReverse', 'IsolatedPool', 'AnthroGW', 'AnthroConveyance')
plot(date , Q_cms, type="n",
main = paste("Site", site_num),
xlab = "",
ylab = "Discharge (cfs)",
xaxt="n")
axis.POSIXct(1, date, format="%b")
axis.POSIXct(1, date, format="%Y", padj=1.8)
AnthroGWQ <- readNWISuv(siteNumbers = AnthroGW, parameterCd = 00065, startDate = AgwStart, endDate = AgwEnd) %>% renameNWISColumns() %>% data.frame
AnthroGWQ <- readNWISuv(siteNumbers = AnthroGW, parameterCd = '00065', startDate = AgwStart, endDate = AgwEnd) %>% renameNWISColumns() %>% data.frame
View(AnthroGWQ)
View(AnthroConveyanceAQ)
View(FrozenQ)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, date, format="%b")
axis.POSIXct(1, date, format="%Y", padj=1.8)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, FrozenQ$dateTime, format="%b")
axis.POSIXct(1, FrozenQ$dateTime, format="%Y", padj=1.8)
#Anthro Upstream Surface water loss
Milner<- read.csv("MilnerID_Data.csv", header = TRUE, stringsAsFactors =FALSE) #13087505 Milner Lwr Pwr Plant at Milner
Milner[,1]<-as.Date(Milner[,1], "%m/%d/%y %H:%M")
View(AnthroConveyanceAQ)
View(AnthroConveyanceBQ)
AnthroGW<- "07139000"  # Arkansas River at Garden City
AgwStart<-as.Date("2019-05-01")
AgwEnd<-as.Date("2019-09-15")
AnthroGWQ <- readNWISuv(siteNumbers = AnthroGW, parameterCd = pCode, startDate = AgwStart, endDate = AgwEnd) %>% renameNWISColumns() %>% data.frame
plot(FlowReverseQ$dateTime, FlowReverseQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, FlowReverseQ$dateTime, format="%b")
axis.POSIXct(1, FlowReverseQ$dateTime, format="%Y", padj=1.8)
plot(IsolatedPoolQ$dateTime, IsolatedPoolQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, IsolatedPoolQ$dateTime, format="%b")
axis.POSIXct(1, IsolatedPoolQ$dateTime, format="%Y", padj=1.8)
plot(AnthroGWQ$dateTime, AnthroGWQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, AnthroGWQ$dateTime, format="%b")
axis.POSIXct(1, AnthroGWQ$dateTime, format="%Y", padj=1.8)
plot(AnthroConveyanceAQ$dateTime, AnthroConveyanceAQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%b")
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%Y", padj=1.8)
plot(AnthroConveyanceBQ$dateTime, AnthroConveyanceAQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, AnthroConveyanceBQ$dateTime, format="%b")
axis.POSIXct(1, AnthroConveyanceBQ$dateTime, format="%Y", padj=1.8)
library(dataRetrieval)
library(tidyverse)
pCode <- "00060"
#if loading in data, need to set working directory to source folder - not sure how to automate this
# -------- Load non- USGS data --------
#Anthro Upstream Surface water loss from diverting around a dam - might not need this
#Milner<- read.csv("MilnerID_Data.csv", header = TRUE, stringsAsFactors =FALSE) #13087505 Milner Lwr Pwr Plant at Milner
#Milner[,1]<-as.Date(Milner[,1], "%m/%d/%y %H:%M")
#----- Frozen gauge location -------------------------
Frozen<-"15896000" # Kuparuk R, Deadhorse, AK; alt SF Grand River near Cash, SD  06356500
FrozStart<- as.Date("2018-10-01") #"2017-09-01"
FrozEnd <- as.Date("2109-06-01") #"2018-07-01
FrozenQ <- readNWISuv(siteNumbers = Frozen, parameterCd = pCode, startDate = FrozStart, endDate = FrozEnd) %>% renameNWISColumns() %>% data.frame
#----- Flow Reversal ---------------------------------
FlowReverse<- "04087170" #Milwaukee
ReverseStart<-as.Date("2018-12-15")
ReverseEnd<-as.Date("2019-04-01")
FlowReverseQ <- readNWISuv(siteNumbers = FlowReverse, parameterCd = pCode, startDate = ReverseStart, endDate = ReverseEnd) %>% renameNWISColumns() %>% data.frame
#----- Data/equipment error ---------------------------
DataError<- "01646500" #potomac river near wash DC
DataErrorStart<-as.Date("2019-06-24")
DataErrorEnd<-as.Date("2019-07-02")
#-----Naturally occuring isolated pools --------------
IsolatedPool<- "09512500" #Agua Fria River nr Mayer, AZ
IsoStart<-as.Date("2019-06-01")
IsoEnd<-as.Date("2019-08-01")
IsoQ <- readNWISuv(siteNumbers = FlowReverse, parameterCd = pCode, startDate = IsoStart, endDate = IsoEnd) %>% renameNWISColumns() %>% data.frame
# ----- Karst Bypass around gauge ------------
Bypass<- "" #bypass through karst Palanisamy and Workman 2015 - need data or gage number
BypassStart<-as.Date("")
BypassEnd<-as.Date("")
#can probably remove this one
UpstreamLoss<- "06879650" #kings Creek nr Manhattan, KS
UpStart<-as.Date("") #"2018-12-01 - when you zoom in it's actually at 1 cfs - better time-frame?
UpEnd<-as.Date("") #"2018-07-01
#-------
#------ Groundwater Pumping Removes flow
AnthroGW<- "07139000"  # Arkansas River at Garden City
AgwStart<-as.Date("2019-05-01")
AgwEnd<-as.Date("2019-09-15")
AnthroGWQ <- readNWISuv(siteNumbers = AnthroGW, parameterCd = pCode, startDate = AgwStart, endDate = AgwEnd) %>% renameNWISColumns() %>% data.frame
#-----Conveyance around gauge -----------------
AnthroConveyanceA<- "08358400" #Rio Grande Floodway
AnthroConveyanceB<- "08358300" #Rio Grande Conveyance
AConvStart<-as.Date("2005-08-01")
AConvEnd<-as.Date("2005-11-01")
AnthroConveyanceAQ <- readNWISuv(siteNumbers = AnthroConveyanceA, parameterCd = pCode, startDate = AConvStart, endDate = AConvEnd) %>% renameNWISColumns() %>% data.frame
AnthroConveyanceBQ <- readNWISuv(siteNumbers = AnthroConveyanceB, parameterCd = pCode, startDate = AConvStart, endDate = AConvEnd) %>% renameNWISColumns() %>% data.frame
#-----------Plotting----------------------------
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, FrozenQ$dateTime, format="%b")
axis.POSIXct(1, FrozenQ$dateTime, format="%Y", padj=1.8)
plot(FlowReverseQ$dateTime, FlowReverseQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, FlowReverseQ$dateTime, format="%b")
axis.POSIXct(1, FlowReverseQ$dateTime, format="%Y", padj=1.8)
plot(IsolatedPoolQ$dateTime, IsolatedPoolQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, IsolatedPoolQ$dateTime, format="%b")
axis.POSIXct(1, IsolatedPoolQ$dateTime, format="%Y", padj=1.8)
plot(AnthroGWQ$dateTime, AnthroGWQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, AnthroGWQ$dateTime, format="%b")
axis.POSIXct(1, AnthroGWQ$dateTime, format="%Y", padj=1.8)
plot(AnthroConveyanceAQ$dateTime, AnthroConveyanceAQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%b")
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%Y", padj=1.8)
plot(AnthroConveyanceBQ$dateTime, AnthroConveyanceBQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, AnthroConveyanceBQ$dateTime, format="%b")
axis.POSIXct(1, AnthroConveyanceBQ$dateTime, format="%Y", padj=1.8)
library(dataRetrieval)
library(tidyverse)
pCode <- "00060"
#if loading in data, need to set working directory to source folder - not sure how to automate this
# -------- Load non- USGS data --------
#Anthro Upstream Surface water loss from diverting around a dam - might not need this
#Milner<- read.csv("MilnerID_Data.csv", header = TRUE, stringsAsFactors =FALSE) #13087505 Milner Lwr Pwr Plant at Milner
#Milner[,1]<-as.Date(Milner[,1], "%m/%d/%y %H:%M")
#----- Frozen gauge location -------------------------
Frozen<-"15896000" # Kuparuk R, Deadhorse, AK; alt SF Grand River near Cash, SD  06356500
FrozStart<- as.Date("2018-10-01") #"2017-09-01"
FrozEnd <- as.Date("2109-06-01") #"2018-07-01
FrozenQ <- readNWISuv(siteNumbers = Frozen, parameterCd = pCode, startDate = FrozStart, endDate = FrozEnd) %>% renameNWISColumns() %>% data.frame
#----- Flow Reversal ---------------------------------
FlowReverse<- "04087170" #Milwaukee
ReverseStart<-as.Date("2018-12-15")
ReverseEnd<-as.Date("2019-04-01")
FlowReverseQ <- readNWISuv(siteNumbers = FlowReverse, parameterCd = pCode, startDate = ReverseStart, endDate = ReverseEnd) %>% renameNWISColumns() %>% data.frame
#----- Data/equipment error ---------------------------
DataError<- "01646500" #potomac river near wash DC
DataErrorStart<-as.Date("2019-06-24")
DataErrorEnd<-as.Date("2019-07-02")
#-----Naturally occuring isolated pools --------------
IsolatedPool<- "09512500" #Agua Fria River nr Mayer, AZ
IsoStart<-as.Date("2019-06-01")
IsoEnd<-as.Date("2019-08-01")
IsoQ <- readNWISuv(siteNumbers = FlowReverse, parameterCd = pCode, startDate = IsoStart, endDate = IsoEnd) %>% renameNWISColumns() %>% data.frame
# ----- Karst Bypass around gauge ------------
Bypass<- "" #bypass through karst Palanisamy and Workman 2015 - need data or gage number
BypassStart<-as.Date("")
BypassEnd<-as.Date("")
#can probably remove this one
UpstreamLoss<- "06879650" #kings Creek nr Manhattan, KS
UpStart<-as.Date("") #"2018-12-01 - when you zoom in it's actually at 1 cfs - better time-frame?
UpEnd<-as.Date("") #"2018-07-01
#-------
#------ Groundwater Pumping Removes flow
AnthroGW<- "07139000"  # Arkansas River at Garden City
AgwStart<-as.Date("2019-05-01")
AgwEnd<-as.Date("2019-09-15")
AnthroGWQ <- readNWISuv(siteNumbers = AnthroGW, parameterCd = pCode, startDate = AgwStart, endDate = AgwEnd) %>% renameNWISColumns() %>% data.frame
#-----Conveyance around gauge -----------------
AnthroConveyanceA<- "08358400" #Rio Grande Floodway
AnthroConveyanceB<- "08358300" #Rio Grande Conveyance
AConvStart<-as.Date("2005-08-01")
AConvEnd<-as.Date("2005-11-01")
AnthroConveyanceAQ <- readNWISuv(siteNumbers = AnthroConveyanceA, parameterCd = pCode, startDate = AConvStart, endDate = AConvEnd) %>% renameNWISColumns() %>% data.frame
AnthroConveyanceBQ <- readNWISuv(siteNumbers = AnthroConveyanceB, parameterCd = pCode, startDate = AConvStart, endDate = AConvEnd) %>% renameNWISColumns() %>% data.frame
#-----------Plotting----------------------------
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, FrozenQ$dateTime, format="%b")
axis.POSIXct(1, FrozenQ$dateTime, format="%Y", padj=1.8)
plot(FlowReverseQ$dateTime, FlowReverseQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, FlowReverseQ$dateTime, format="%b")
axis.POSIXct(1, FlowReverseQ$dateTime, format="%Y", padj=1.8)
plot(IsolatedPoolQ$dateTime, IsolatedPoolQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, IsolatedPoolQ$dateTime, format="%b")
axis.POSIXct(1, IsolatedPoolQ$dateTime, format="%Y", padj=1.8)
plot(AnthroGWQ$dateTime, AnthroGWQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, AnthroGWQ$dateTime, format="%b")
axis.POSIXct(1, AnthroGWQ$dateTime, format="%Y", padj=1.8)
plot(AnthroConveyanceAQ$dateTime, AnthroConveyanceAQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%b")
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%Y", padj=1.8)
plot(AnthroConveyanceBQ$dateTime, AnthroConveyanceBQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, AnthroConveyanceBQ$dateTime, format="%b")
axis.POSIXct(1, AnthroConveyanceBQ$dateTime, format="%Y", padj=1.8)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, FrozenQ$dateTime, format="%b")
axis.POSIXct(1, FrozenQ$dateTime, format="%Y", padj=1.8)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, type="l", col="blue", xlab="Date", ylab="Discharge (cfs)")
title("Frozen Gauge: Kuparuk River, Deadhorse, AK ", line= -1)
axis.POSIXct(1, FrozenQ$dateTime, format="%b")
axis.POSIXct(1, FrozenQ$dateTime, format="%Y", padj=1.8)
plot(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)")
plot(FrozenQ$dateTime[FrozenQ$Flow_Inst >= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst >= 0.001], main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)")
line(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], type="dotdash")
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], type="dotdash")
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotdash")
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotdash", c='r')
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotdash", color='r')
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotdash", col='r')
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotdash", col='red')
plot(FrozenQ$dateTime[FrozenQ$Flow_Inst >= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst >= 0.001], main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)")
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotdash", col='red')
plot(FrozenQ$dateTime[FrozenQ$Flow_Inst >= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst >= 0.001], main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)")
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotdash", col='white')
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotdash", col='white', lwd=2)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotdash", col='white', lwd=3)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotdash", col='white', lwd=4)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=4)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=2)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=1)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
DataError<- "01646500" #potomac river near wash DC
DataErrorStart<-as.Date("2019-06-24")
DataErrorEnd<-as.Date("2019-07-02")
DataErrorQ <- readNWISuv(siteNumbers = DataError, parameterCd = pCode, startDate = DataErrorStart, endDate = DataErrorEnd) %>% renameNWISColumns() %>% data.frame
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, FrozenQ$dateTime, format="%b")
axis.POSIXct(1, FrozenQ$dateTime, format="%Y", padj=1.8)
plot(FlowReverseQ$dateTime, FlowReverseQ$Flow_Inst, type="l", main="Flow Reversal: Milwaukee River, WI",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FlowReverseQ$dateTime[FlowReverseQ$Flow_Inst <= 0.001], FlowReverseQ$Flow_Inst[FlowReverseQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, FlowReverseQ$dateTime, format="%b")
axis.POSIXct(1, FlowReverseQ$dateTime, format="%Y", padj=1.8)
plot(DataErrorQ$dateTime, DataErrorQ$Flow_Inst, type="l", main="Equipment Error: Potomac River,           Washington, DC", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(DataErrorQ$dateTime[DataErrorQ$Flow_Inst <= 0.001], DataErrorQ$Flow_Inst[DataErrorQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, DataErrorQ$dateTime, format="%b")
axis.POSIXct(1, DataErrorQ$dateTime, format="%Y", padj=1.8)
plot(IsolatedPoolQ$dateTime, IsolatedPoolQ$Flow_Inst, type="l", main="Upstream Flow Loss: Agua Fria River, Mayer, AZ",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(IsolatedPoolQ$dateTime[IsolatedPoolQ$Flow_Inst <= 0.001], IsolatedPoolQ$Flow_Inst[IsolatedPoolQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, IsolatedPoolQ$dateTime, format="%b")
axis.POSIXct(1, IsolatedPoolQ$dateTime, format="%Y", padj=1.8)
plot(AnthroGWQ$dateTime, AnthroGWQ$Flow_Inst, type="l", main="Groundwater Pumping: Arkansas River, Garden City, AK" ,
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(AnthroGWQ$dateTime[AnthroGWQ$Flow_Inst <= 0.001], AnthroGWQ$Flow_Inst[AnthroGWQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, AnthroGWQ$dateTime, format="%b")
axis.POSIXct(1, AnthroGWQ$dateTime, format="%Y", padj=1.8)
plot(AnthroConveyanceAQ$dateTime, AnthroConveyanceAQ$Flow_Inst, type="l", main= "Gauge Bypass, Rio Grande Floodway",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(AnthroConveyanceAQ$dateTime[AnthroConveyanceAQ$Flow_Inst <= 0.001], AnthroConveyanceAQ$Flow_Inst[AnthroConveyanceAQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%b")
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%Y", padj=1.8)
plot(IsoQ$dateTime, IsoQ$Flow_Inst, type="l", main="Upstream Flow Loss: Agua Fria River, Mayer, AZ",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(IsoQ$dateTime[IsoQ$Flow_Inst <= 0.001], IsoQ$Flow_Inst[IsoQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, IsoQ$dateTime, format="%b")
axis.POSIXct(1, IsoQ$dateTime, format="%Y", padj=1.8)
plot(IsoQ$dateTime, IsoQ$Flow_Inst, type="l", main="Upstream Flow Loss: Agua Fria River, Mayer, AZ",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(IsoQ$dateTime[IsoQ$Flow_Inst <= 0.001], IsoQ$Flow_Inst[IsoQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=2)
axis.POSIXct(1, IsoQ$dateTime, format="%b")
axis.POSIXct(1, IsoQ$dateTime, format="%Y", padj=1.8)
plot(IsoQ$dateTime, IsoQ$Flow_Inst, type="l", main="Upstream Flow Loss: Agua Fria River, Mayer, AZ",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
IsoQ <- readNWISuv(siteNumbers = IsolatedPool, parameterCd = pCode, startDate = IsoStart, endDate = IsoEnd) %>% renameNWISColumns() %>% data.frame
plot(IsoQ$dateTime, IsoQ$Flow_Inst, type="l", main="Upstream Flow Loss: Agua Fria River, Mayer, AZ",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(IsoQ$dateTime[IsoQ$Flow_Inst <= 0.001], IsoQ$Flow_Inst[IsoQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=2)
axis.POSIXct(1, IsoQ$dateTime, format="%b")
axis.POSIXct(1, IsoQ$dateTime, format="%Y", padj=1.8)
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, FrozenQ$dateTime, format="%b")
axis.POSIXct(1, FrozenQ$dateTime, format="%Y", padj=1.8)
plot(FlowReverseQ$dateTime, FlowReverseQ$Flow_Inst, type="l", main="Flow Reversal: Milwaukee River, WI",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FlowReverseQ$dateTime[FlowReverseQ$Flow_Inst <= 0.001], FlowReverseQ$Flow_Inst[FlowReverseQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, FlowReverseQ$dateTime, format="%b")
axis.POSIXct(1, FlowReverseQ$dateTime, format="%Y", padj=1.8)
plot(FlowReverseQ$dateTime[FlowReverseQ$Flow_Inst <= 0.001], FlowReverseQ$Flow_Inst[FlowReverseQ$Flow_Inst <= 0.001], lty="dotted", col='blue', lwd=3)
plot(FlowReverseQ$dateTime[FlowReverseQ$Flow_Inst <= 0.001], FlowReverseQ$Flow_Inst[FlowReverseQ$Flow_Inst <= 0.001], type='l', lty="dotted", col='blue', lwd=3)
plot(FlowReverseQ$dateTime[FlowReverseQ$Flow_Inst <= 0.001], FlowReverseQ$Flow_Inst[FlowReverseQ$Flow_Inst <= 0.001], type='l', lty="dotted", col='blue', lwd=1)
plot(FlowReverseQ$dateTime, FlowReverseQ$Flow_Inst, type="l", main="Flow Reversal: Milwaukee River, WI",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=1)
lines(FlowReverseQ$dateTime[FlowReverseQ$Flow_Inst <= 0.001], FlowReverseQ$Flow_Inst[FlowReverseQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=1)
axis.POSIXct(1, FlowReverseQ$dateTime, format="%b")
axis.POSIXct(1, FlowReverseQ$dateTime, format="%Y", padj=1.8)
FlowReverse<- "04087170" #Milwaukee
ReverseStart<-as.Date("2019-01-15")
ReverseEnd<-as.Date("2019-03-15")
FlowReverseQ <- readNWISuv(siteNumbers = FlowReverse, parameterCd = pCode, startDate = ReverseStart, endDate = ReverseEnd) %>% renameNWISColumns() %>% data.frame
plot(FlowReverseQ$dateTime, FlowReverseQ$Flow_Inst, type="l", main="Flow Reversal: Milwaukee River, WI",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=1)
lines(FlowReverseQ$dateTime[FlowReverseQ$Flow_Inst <= 0.001], FlowReverseQ$Flow_Inst[FlowReverseQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=1)
axis.POSIXct(1, FlowReverseQ$dateTime, format="%b")
axis.POSIXct(1, FlowReverseQ$dateTime, format="%Y", padj=1.8)
plot(DataErrorQ$dateTime, DataErrorQ$Flow_Inst, type="l", main="Equipment Error: Potomac River,           Washington, DC", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(DataErrorQ$dateTime[DataErrorQ$Flow_Inst <= 0.001], DataErrorQ$Flow_Inst[DataErrorQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, DataErrorQ$dateTime, format="%b")
axis.POSIXct(1, DataErrorQ$dateTime, format="%Y", padj=1.8)
plot(IsoQ$dateTime, IsoQ$Flow_Inst, type="l", main="Upstream Flow Loss: Agua Fria River, Mayer, AZ",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(IsoQ$dateTime[IsoQ$Flow_Inst <= 0.001], IsoQ$Flow_Inst[IsoQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=2)
axis.POSIXct(1, IsoQ$dateTime, format="%b")
axis.POSIXct(1, IsoQ$dateTime, format="%Y", padj=1.8)
plot(IsoQ$dateTime, IsoQ$Flow_Inst, type="l", main="Upstream Flow Loss: Agua Fria River, Mayer, AZ",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(IsoQ$dateTime[IsoQ$Flow_Inst <= 0.001], IsoQ$Flow_Inst[IsoQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, IsoQ$dateTime, format="%b")
axis.POSIXct(1, IsoQ$dateTime, format="%Y", padj=1.8)
#-----Naturally occuring isolated pools --------------
IsolatedPool<- "09512500" #Agua Fria River nr Mayer, AZ
IsoStart<-as.Date("2019-07-01")
IsoEnd<-as.Date("2019-08-01")
IsoQ <- readNWISuv(siteNumbers = IsolatedPool, parameterCd = pCode, startDate = IsoStart, endDate = IsoEnd) %>% renameNWISColumns() %>% data.frame
plot(IsoQ$dateTime, IsoQ$Flow_Inst, type="l", main="Upstream Flow Loss: Agua Fria River, Mayer, AZ",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(IsoQ$dateTime[IsoQ$Flow_Inst <= 0.001], IsoQ$Flow_Inst[IsoQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, IsoQ$dateTime, format="%b")
axis.POSIXct(1, IsoQ$dateTime, format="%Y", padj=1.8)
IsolatedPool<- "09512500" #Agua Fria River nr Mayer, AZ
IsoStart<-as.Date("2019-07-01")
IsoEnd<-as.Date("2019-08-01")
IsoQ <- readNWISuv(siteNumbers = IsolatedPool, parameterCd = pCode, startDate = IsoStart, endDate = IsoEnd) %>% renameNWISColumns() %>% data.frame
plot(IsoQ$dateTime, IsoQ$Flow_Inst, type="l", main="Upstream Flow Loss: Agua Fria River, Mayer, AZ",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(IsoQ$dateTime[IsoQ$Flow_Inst <= 0.001], IsoQ$Flow_Inst[IsoQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, IsoQ$dateTime, format="%b")
axis.POSIXct(1, IsoQ$dateTime, format="%Y", padj=1.8)
#-----Naturally occuring isolated pools --------------
IsolatedPool<- "09512500" #Agua Fria River nr Mayer, AZ
IsoStart<-as.Date("2019-06-01")
IsoEnd<-as.Date("2019-08-01")
IsoQ <- readNWISuv(siteNumbers = IsolatedPool, parameterCd = pCode, startDate = IsoStart, endDate = IsoEnd) %>% renameNWISColumns() %>% data.frame
plot(IsoQ$dateTime, IsoQ$Flow_Inst, type="l", main="Upstream Flow Loss: Agua Fria River, Mayer, AZ",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(IsoQ$dateTime[IsoQ$Flow_Inst <= 0.001], IsoQ$Flow_Inst[IsoQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, IsoQ$dateTime, format="%b")
axis.POSIXct(1, IsoQ$dateTime, format="%Y", padj=1.8)
plot(AnthroGWQ$dateTime, AnthroGWQ$Flow_Inst, type="l", main="Groundwater Pumping: Arkansas River, Garden City, AK" ,
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(AnthroGWQ$dateTime[AnthroGWQ$Flow_Inst <= 0.001], AnthroGWQ$Flow_Inst[AnthroGWQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, AnthroGWQ$dateTime, format="%b")
axis.POSIXct(1, AnthroGWQ$dateTime, format="%Y", padj=1.8)
plot(AnthroGWQ$dateTime, AnthroGWQ$Flow_Inst, type="l", main="Groundwater Pumping: Arkansas River, Garden City, AK" ,
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(AnthroGWQ$dateTime[AnthroGWQ$Flow_Inst <= 0.001], AnthroGWQ$Flow_Inst[AnthroGWQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=2)
axis.POSIXct(1, AnthroGWQ$dateTime, format="%b")
axis.POSIXct(1, AnthroGWQ$dateTime, format="%Y", padj=1.8)
AnthroGW<- "07139000"  # Arkansas River at Garden City
AgwStart<-as.Date("2019-05-01")
AgwEnd<-as.Date("2019-07-15")
AnthroGWQ <- readNWISuv(siteNumbers = AnthroGW, parameterCd = pCode, startDate = AgwStart, endDate = AgwEnd) %>% renameNWISColumns() %>% data.frame
plot(AnthroGWQ$dateTime, AnthroGWQ$Flow_Inst, type="l", main="Groundwater Pumping: Arkansas River, Garden City, AK" ,
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(AnthroGWQ$dateTime[AnthroGWQ$Flow_Inst <= 0.001], AnthroGWQ$Flow_Inst[AnthroGWQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, AnthroGWQ$dateTime, format="%b")
axis.POSIXct(1, AnthroGWQ$dateTime, format="%Y", padj=1.8)
plot(AnthroConveyanceAQ$dateTime, AnthroConveyanceAQ$Flow_Inst, type="l", main= "Gauge Bypass, Rio Grande Floodway",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(AnthroConveyanceAQ$dateTime[AnthroConveyanceAQ$Flow_Inst <= 0.001], AnthroConveyanceAQ$Flow_Inst[AnthroConveyanceAQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%b")
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%Y", padj=1.8)
plot(AnthroConveyanceBQ$dateTime, AnthroConveyanceBQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, AnthroConveyanceBQ$dateTime, format="%b")
axis.POSIXct(1, AnthroConveyanceBQ$dateTime, format="%Y", padj=1.8)
wd()
pwd()
getwd()
setwd("/Documents/GitRepos/zero-not-zero/Figures")
setwd("~/Documents/GitRepos/zero-not-zero/Figures")
pdf("Frozen.pdf", width = 4, height =4 )
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, FrozenQ$dateTime, format="%b")
axis.POSIXct(1, FrozenQ$dateTime, format="%Y", padj=1.8)
dev.off()
pdf("Frozen.pdf", width = 4, height =4 )
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2, cex.main=0.5)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, FrozenQ$dateTime, format="%b")
axis.POSIXct(1, FrozenQ$dateTime, format="%Y", padj=1.8)
dev.off()
pdf("Frozen.pdf", width = 3.5, height =4 )
plot(FrozenQ$dateTime, FrozenQ$Flow_Inst, main = "Frozen Gauge: Kuparuk River, Deadhorse, AK ", type="l", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2, cex.main=0.75)
lines(FrozenQ$dateTime[FrozenQ$Flow_Inst <= 0.001], FrozenQ$Flow_Inst[FrozenQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, FrozenQ$dateTime, format="%b")
axis.POSIXct(1, FrozenQ$dateTime, format="%Y", padj=1.8)
dev.off()
pdf("FlowReverse.pdf", width = 3.5, height =4 )
plot(FlowReverseQ$dateTime, FlowReverseQ$Flow_Inst, type="l", main="Flow Reversal: Milwaukee River, WI",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=1, cex.main=0.75)
lines(FlowReverseQ$dateTime[FlowReverseQ$Flow_Inst <= 0.001], FlowReverseQ$Flow_Inst[FlowReverseQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=1)
axis.POSIXct(1, FlowReverseQ$dateTime, format="%b")
axis.POSIXct(1, FlowReverseQ$dateTime, format="%Y", padj=1.8)
dev.off()
pdf("DataError.pdf", width = 3.5, height =4 )
plot(DataErrorQ$dateTime, DataErrorQ$Flow_Inst, type="l", main="Equipment Error: Potomac River,           Washington, DC", col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2, cex.main=0.75)
lines(DataErrorQ$dateTime[DataErrorQ$Flow_Inst <= 0.001], DataErrorQ$Flow_Inst[DataErrorQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, DataErrorQ$dateTime, format="%b")
axis.POSIXct(1, DataErrorQ$dateTime, format="%Y", padj=1.8)
dev.off()
pdf("UpstreamLoss.pdf", width = 3.5, height =4 )
plot(IsoQ$dateTime, IsoQ$Flow_Inst, type="l", main="Upstream Flow Loss: Agua Fria River, Mayer, AZ",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2, cex.main=0.75)
lines(IsoQ$dateTime[IsoQ$Flow_Inst <= 0.001], IsoQ$Flow_Inst[IsoQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, IsoQ$dateTime, format="%b")
axis.POSIXct(1, IsoQ$dateTime, format="%Y", padj=1.8)
dev.off()
pdf("AnthroGW.pdf", width = 3.5, height =4 )
plot(AnthroGWQ$dateTime, AnthroGWQ$Flow_Inst, type="l", main="Groundwater Pumping: Arkansas River, Garden City, AK" ,
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2, cex.main=0.75)
lines(AnthroGWQ$dateTime[AnthroGWQ$Flow_Inst <= 0.001], AnthroGWQ$Flow_Inst[AnthroGWQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, AnthroGWQ$dateTime, format="%b")
axis.POSIXct(1, AnthroGWQ$dateTime, format="%Y", padj=1.8)
dev.off()
pdf("AnthroBypass.pdf", width = 3.5, height =4 )
plot(AnthroConveyanceAQ$dateTime, AnthroConveyanceAQ$Flow_Inst, type="l", main= "Gauge Bypass, Rio Grande Floodway",
col="blue", xlab="Date", ylab="Discharge (cfs)", lwd=2, cex.main=0.75)
lines(AnthroConveyanceAQ$dateTime[AnthroConveyanceAQ$Flow_Inst <= 0.001], AnthroConveyanceAQ$Flow_Inst[AnthroConveyanceAQ$Flow_Inst <= 0.001], lty="dotted", col='white', lwd=3)
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%b")
axis.POSIXct(1, AnthroConveyanceAQ$dateTime, format="%Y", padj=1.8)
dev.off()
pdf("AnthroBypassChan.pdf", width = 3.5, height =4 )
plot(AnthroConveyanceBQ$dateTime, AnthroConveyanceBQ$Flow_Inst, type="l",
col="blue", xlab="Date", ylab="Discharge (cfs)")
axis.POSIXct(1, AnthroConveyanceBQ$dateTime, format="%b")
axis.POSIXct(1, AnthroConveyanceBQ$dateTime, format="%Y", padj=1.8)
dev.off()
